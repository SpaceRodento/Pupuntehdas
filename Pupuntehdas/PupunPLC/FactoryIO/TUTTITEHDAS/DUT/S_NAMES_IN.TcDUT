<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <DUT Name="S_NAMES_IN" Id="{f479766e-01db-45ba-a22f-96296ee29de8}">
    <Declaration><![CDATA[TYPE S_NAMES_IN :
STRUCT
			
//===== 	BYTE	0		
iInput0		:		BIT;
iInput1		:		BIT;
iInput2		:		BIT;
iInput3		:		BIT;
iInput4		:		BIT;
iInput5		:		BIT;
iSensor6	:		BIT;
iInput7		:		BIT;
//===== 	BYTE	1	
iInput8		:		BIT;
iInput9		:		BIT;
iInput10	:		BIT;
iInput11	:		BIT;
iInput12	:		BIT;
iRetroSensor1	:		BIT;
iRetroSensor2	:		BIT;
iInput15	:		BIT;
//===== 	BYTE	2	
iSortLimit0	:		BIT;
iSortLimit90:		BIT;
iSortBackLimit	:		BIT;
iSortFrontLimit	:		BIT;
iPickPlace_Climit:		BIT;
iPickPlace_Z_Moving	:		BIT;
iPickPlace_XY_Moving	:		BIT;
iPickPlace_BoxDetected	:		BIT;
//===== 	BYTE	3	
iInput24	:		BIT;
iInput25	:		BIT;
iInput26	:		BIT;
iInput27	:		BIT;
iInput28	:		BIT;
iInput29	:		BIT;
iPusherBackLimit	:		BIT;
iPusherFrontLimit	:		BIT;
//===== 	BYTE	4	
iInput32	:		BIT;
iInput33	:		BIT;
iInput34	:		BIT;
iSensor5	:		BIT;
iInput36	:		BIT;
iInput37	:		BIT;
iInput38	:		BIT;
iInput39	:		BIT;
//===== 	BYTE	5	
iCNC1_Opened	:		BIT;
iCNC1_Busy	:		BIT;
iCNC1_Error	:		BIT;
iCNC2_Opened	:		BIT;
iCNC2_Busy	:		BIT;
iCNC2_Error	:		BIT;
iCNC3_Opened	:		BIT;
iCNC3_Busy	:		BIT;
//===== 	BYTE	6	
iCNC3_Error	:		BIT;
iInput49	:		BIT;
iInput50	:		BIT;
iInput51	:		BIT;
iInput52	:		BIT;
iInput53	:		BIT;
iTwoAxisPick1_ItemDetected	:		BIT;
iSensor10	:		BIT;
//===== 	BYTE	7	
iClamp1_Limit	:		BIT;
iClamp1_Clamped	:		BIT;
iInput58	:		BIT;
iInput59	:		BIT;
iInput60	:		BIT;
iInput61	:		BIT;
Sensor11	:		BIT;
Stacker1_LeftLimit	:		BIT;
//===== 	BYTE	8	
Stacker1_RightLimit	:		BIT;
Stacker1_MiddleLimit:		BIT;
iInput66	:		BIT;
iInput67	:		BIT;
iInput68	:		BIT;
iInput69	:		BIT;
iInput70	:		BIT;
iInput71	:		BIT;
//===== 	BYTE	9	
iInput72	:		BIT;
iInput73	:		BIT;
iInput74	:		BIT;
iInput75	:		BIT;
iInput76	:		BIT;
iInput77	:		BIT;
iInput78	:		BIT;
iInput79	:		BIT;
//===== 	BYTE	10	
iInput80	:		BIT;
iInput81	:		BIT;
iInput82	:		BIT;
iInput83	:		BIT;
iInput84	:		BIT;
iInput85	:		BIT;
iInput86	:		BIT;
iInput87	:		BIT;
//===== 	BYTE	11	
iInput88	:		BIT;
iInput89	:		BIT;
iInput90	:		BIT;
iInput91	:		BIT;
iInput92	:		BIT;
iInput93	:		BIT;
iInput94	:		BIT;
iInput95	:		BIT;
//===== 	BYTE	12	
iInput96	:		BIT;
iInput97	:		BIT;
iInput98	:		BIT;
iInput99	:		BIT;
iInput100	:		BIT;
iInput101	:		BIT;
iInput102	:		BIT;
iInput103	:		BIT;
//===== 	BYTE	13	
iInput104	:		BIT;
iInput105	:		BIT;
iInput106	:		BIT;
iInput107	:		BIT;
iInput108	:		BIT;
iInput109	:		BIT;
iInput110	:		BIT;
iInput111	:		BIT;
//===== 	BYTE	14	
iInput112	:		BIT;
iInput113	:		BIT;
iInput114	:		BIT;
iInput115	:		BIT;
iInput116	:		BIT;
iInput117	:		BIT;
iInput118	:		BIT;
iInput119	:		BIT;
//===== 	BYTE	15	
iInput120	:		BIT;
iInput121	:		BIT;
iInput122	:		BIT;
iInput123	:		BIT;
iInput124	:		BIT;
iInput125	:		BIT;
iInput126	:		BIT;
iInput127	:		BIT;
//===== 	BYTE	16	
iInput128	:		BIT;
iInput129	:		BIT;
iInput130	:		BIT;
iInput131	:		BIT;
iInput132	:		BIT;
iInput133	:		BIT;
iInput134	:		BIT;
iInput135	:		BIT;
//===== 	BYTE	17	
iInput136	:		BIT;
iInput137	:		BIT;
iInput138	:		BIT;
iInput139	:		BIT;
iInput140	:		BIT;
iInput141	:		BIT;
iInput142	:		BIT;
iInput143	:		BIT;
//===== 	BYTE	18	
iInput144	:		BIT;
iInput145	:		BIT;
iInput146	:		BIT;
iInput147	:		BIT;
iInput148	:		BIT;
iInput149	:		BIT;
iInput150	:		BIT;
iInput151	:		BIT;
//===== 	BYTE	19	
iInput152	:		BIT;
iInput153	:		BIT;
iInput154	:		BIT;
iInput155	:		BIT;
iInput156	:		BIT;
iInput157	:		BIT;
iInput158	:		BIT;
iInput159	:		BIT;
//===== 	BYTE	20	
iInput160	:		BIT;
iInput161	:		BIT;
iInput162	:		BIT;
iInput163	:		BIT;
iInput164	:		BIT;
iInput165	:		BIT;
iInput166	:		BIT;
iInput167	:		BIT;
//===== 	BYTE	21	
iInput168	:		BIT;
iInput169	:		BIT;
iInput170	:		BIT;
iInput171	:		BIT;
iInput172	:		BIT;
iInput173	:		BIT;
iInput174	:		BIT;
iInput175	:		BIT;
//===== 	BYTE	22	
iInput176	:		BIT;
iInput177	:		BIT;
iInput178	:		BIT;
iInput179	:		BIT;
iInput180	:		BIT;
iInput181	:		BIT;
iInput182	:		BIT;
iInput183	:		BIT;
//===== 	BYTE	23	
iInput184	:		BIT;
iInput185	:		BIT;
iInput186	:		BIT;
iInput187	:		BIT;
iInput188	:		BIT;
iInput189	:		BIT;
iInput190	:		BIT;
iInput191	:		BIT;
//===== 	BYTE	24	
iInput192	:		BIT;
iInput193	:		BIT;
iInput194	:		BIT;
iInput195	:		BIT;
iInput196	:		BIT;
iInput197	:		BIT;
iInput198	:		BIT;
iInput199	:		BIT;
//===== 	BYTE	25	
iInput200	:		BIT;
iInput201	:		BIT;
iInput202	:		BIT;
iInput203	:		BIT;
iInput204	:		BIT;
iInput205	:		BIT;
iInput206	:		BIT;
iInput207	:		BIT;
//===== 	BYTE	26	
iInput208	:		BIT;
iInput209	:		BIT;
iInput210	:		BIT;
iInput211	:		BIT;
iInput212	:		BIT;
iInput213	:		BIT;
iInput214	:		BIT;
iInput215	:		BIT;
//===== 	BYTE	27	
iInput216	:		BIT;
iInput217	:		BIT;
iInput218	:		BIT;
iInput219	:		BIT;
iInput220	:		BIT;
iInput221	:		BIT;
iInput222	:		BIT;
iInput223	:		BIT;
//===== 	BYTE	28	
iInput224	:		BIT;
iInput225	:		BIT;
iInput226	:		BIT;
iInput227	:		BIT;
iInput228	:		BIT;
iInput229	:		BIT;
iInput230	:		BIT;
iInput231	:		BIT;
//===== 	BYTE	29	
iInput232	:		BIT;
iInput233	:		BIT;
iInput234	:		BIT;
iInput235	:		BIT;
iInput236	:		BIT;
iInput237	:		BIT;
iInput238	:		BIT;
iInput239	:		BIT;
//===== 	BYTE	30	
iInput240	:		BIT;
iInput241	:		BIT;
iInput242	:		BIT;
iInput243	:		BIT;
iInput244	:		BIT;
iInput245	:		BIT;
iInput246	:		BIT;
iInput247	:		BIT;
//===== 	BYTE	31	
iInput248	:		BIT;
iInput249	:		BIT;
iInput250	:		BIT;
iInput251	:		BIT;
iInput252	:		BIT;
iInput253	:		BIT;
iInput254	:		BIT;
iInput255	:		BIT;
//===== 	BYTE	32	
iInput256	:		BIT;
iInput257	:		BIT;
iInput258	:		BIT;
iInput259	:		BIT;
iInput260	:		BIT;
iInput261	:		BIT;
iInput262	:		BIT;
iInput263	:		BIT;
//===== 	BYTE	33	

	
END_STRUCT
END_TYPE
]]></Declaration>
  </DUT>
</TcPlcObject>